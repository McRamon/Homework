extends CanvasLayer

@onready var resources_container: HBoxContainer = $ResourcesContainer

var resource_labels: Dictionary = {}  # { "wood": Label, "stone": Label }

func _ready():
	# –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
	ResourceManager.connect("resource_changed", Callable(self, "_on_resource_changed"))

	# ‚úÖ –°–æ–∑–¥–∞—ë–º UI –¥–ª—è –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ ResourceManager
	for id in ResourceManager.resources.keys():
		_create_resource_ui(id, ResourceManager.get_amount(id))

func _create_resource_ui(id: String, amount: int):
	# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	var box = HBoxContainer.new()

	# üñºÔ∏è –ò–∫–æ–Ω–∫–∞ —Ä–µ—Å—É—Ä—Å–∞
	var icon_rect = TextureRect.new()
	icon_rect.texture = ResourceManager.resource_icons[id]
	icon_rect.custom_minimum_size = Vector2(24, 24)
	box.add_child(icon_rect)

	# üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
	var lbl = Label.new()
	lbl.text = str(amount)
	box.add_child(lbl)

	resources_container.add_child(box)
	resource_labels[id] = lbl

func _on_resource_changed(id: String, amount: int):
	if resource_labels.has(id):
		resource_labels[id].text = str(amount)
	else:
		# –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å –¥–æ–±–∞–≤–∏–ª—Å—è –≤–ø–µ—Ä–≤—ã–µ ‚Äì —Å–æ–∑–¥–∞—ë–º UI –¥–ª—è –Ω–µ–≥–æ
		_create_resource_ui(id, amount)
