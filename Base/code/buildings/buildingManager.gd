extends Node2D

var current_data: BuildingData = null
@export var tile_size := 32   # —Ä–∞–∑–º–µ—Ä —Å–µ—Ç–∫–∏

func request_build(data: BuildingData):
	current_data = data
	print("‚ñ∂ –í—ã–±—Ä–∞–Ω–æ –∑–¥–∞–Ω–∏–µ:", data.name)

func _unhandled_input(event):
	if current_data and event is InputEventMouseButton and event.button_index == MOUSE_BUTTON_LEFT and event.pressed:
		var pos = get_global_mouse_position()
		var snap = pos.snapped(Vector2(tile_size, tile_size))
		_place_building(snap)

func _place_building(snap: Vector2):
	if not current_data:
		return

	print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è:", current_data.name)
	if not ResourceManager.can_afford(current_data.build_requirements):
		print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è:", current_data.name)
		return

	# —Å–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
	ResourceManager.spend(current_data.build_requirements)
	print("‚úÖ –†–µ—Å—É—Ä—Å—ã —Å–ø–∏—Å–∞–Ω—ã. –û—Å—Ç–∞—Ç–æ–∫:", ResourceManager.resources)

	# —Å–æ–∑–¥–∞—ë–º –∑–¥–∞–Ω–∏–µ
	var bld = current_data.scene.instantiate()
	bld.global_position = snap
	add_child(bld)
	if bld.has_method("start_build"):
		bld.start_build(current_data.build_time)

	print("üèóÔ∏è –ó–¥–∞–Ω–∏–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ:", current_data.name)
	current_data = null
